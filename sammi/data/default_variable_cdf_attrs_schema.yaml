# Based on :  https://spdf.gsfc.nasa.gov/istp_guide/vattributes.html
#             SAMMI / DEFAULT ISTP CDF Format Guide
attribute_key:
  # ===== EPOCH-ONLY VARIABLE ATTRIBUTES =====
  TIME_BASE:
    description: >
      fixed (0AD, 1900, 1970 (POSIX), J2000 (used by CDF_TIME_TT2000), 4714 BC (Julian)) or flexible (provider-defined)
    required: false
    valid_values: null
    alternate: null
  RESOLUTION:
    description: >
      Using ISO8601 relative time format, for example: "1s" = 1 second.
      Resolution provides the smallest change in time that is measured.
    required: false
    valid_values: null
    alternate: null
  TIME_SCALE:
    description: >
      TT (same as TDT, used by CDF_TIME_TT2000), TAI (same as IAT, TT-32.184s), UTC (includes leap seconds), TDB (same as SPICE ET), EME1950 [default: UTC]
    required: false
    valid_values: null
    alternate: null
  REFERENCE_POSITION:
    description: >
      Topocenter (local), Geocenter , rotating Earth geoid (used by CDF_TIME_TT2000).
      Reference_Position is optional metadata to account for time variance with position in the gravity wells and with relative velocity.
      While we could use a combined TimeSystem attribute that defines mission-specific time scales where needed, such as UTC-at-STEREO-B, it's cleaner to keep them separate as Time_Scale=UTC and Reference_Position=STEREO-B.
    required: false
    valid_values: null
    alternate: null
  LEAP_SECONDS_INCLUDED:
    description: >
      comma-delimited list (within brackets) of leap seconds included in the form of a lists of ISO8601 times when each leap second was added, appended with the size of the leap second in ISO8601 relative time (+/- time, most commonly: "+1s") [default: standard list of leap seconds up to time of data].
      Leap_Seconds_Included is needed to account for time scales that don't have all 34 (in 2009) leap seconds and for the clocks in various countries that started using leap seconds at different times.
      The full list is required to handle the equally or more common case where a time scale starts at a pecific UTC but continues on without leap seconds in TAI mode;
      this is basically what missions that don't add leap seconds are doing.
      $ cat tai-utc.dat | awk 'ORS="," { val = $7 - prev } {prev = $7} { print $1$2"01+" val "s" }'
    required: false
    valid_values: null
    alternate: null
  ABSOLUTE_ERROR:
    description: >
      Absolute or systematic error, in same units as Units attribute.
    required: false # Optional in ISTP Guide
    valid_values: null
    alternate: null
  RELATIVE_ERROR:
    description: >
      Relative or random error, in same units as Units attribute - to specify the accuracy of the time stamps relative to each other.
      This is usually much smaller than Absolute_Error.
    required: false
    valid_values: null
    alternate: null
  BIN_LOCATION:
    description: >
      relative position of time stamp to the data measurement bin, with 0.0 at the beginning of time bin and 1.0 at the end.
      Default is 0.5 for the time at the center of the data measurement.
      Since clock readings are usually truncated, the real value may be closer to 0.0.
    required: false
    valid_values: null
    alternate: null
  # ===== DATA VARIABLE ATTRIBUTES =====
  AVG_TYPE:
    description: >
      sets up useful default conditions: different techniques appropriate to averaging different types of data.
      If this attribute is not present, standard average, i.e., simple arithmetic mean, is assumed.
      The value of this attribute can be used with application software.
      The valid options are listed below:
      - standard -- simple arithmetic mean
      - angle_degrees -- "direction" average over 360 deg e.g., average of 5 and 355 is 0 instead of 180
      - angle_radians -- "direction" average over 2 pi
      - angle_hour -- "direction" average over local times (hours), e.g., average of 2 and 22 is 0 instead of 12
      - RMS -- square root of the average of the squares of the values
      - log -- logarithm of the average of the anti-logarithms of the values
      - decibel -- 10 times the logarithm of the average of the anti-logarithms of the (values/10)
      - cosine -- cosine of the average of the arc-cosines of the values
      - none -- no meaningful averaging calculation is possible
    required: false # Optional in ISTP Guide
    valid_values: null
    alternate: null
  CATDESC:
    description: >
      This is a human readable description of the data variable.
      Generally, this is an 80-c
      haracter string which describes the variable and what it depends on.
    required: true
    valid_values: null
    alternate: null
  CDELTi:
    description: >
      This is a FITS WCS Keyword being repurposed for handling WCS transformations with
      high-dimensional or spectral CDF data variables. This metadata attribte should be
      used for the i'th dimension (1-based) and reapeated for all WCSAXES dimensions.
      The value field shall contain a floating point number
      giving the partial derivative of the coordinate specified by the CTYPEi
      keywords with respect to the pixel index, evaluated at the reference
      point CRPIXi, in units of the coordinate specified by  the CTYPEi
      keyword.
    required: false
    valid_values: null
    alternate: null
  CNAMEi:
    description: >
      This is a FITS WCS Keyword being repurposed for handling WCS transformations with
      high-dimensional or spectral CDF data variables. This metadata attribte should be
      used for the i'th dimension (1-based) and reapeated for all WCSAXES dimensions.
      The value shall contain a charachter string represnting the name of the i'th axis.
      The name is used for comment/documentation purposes only and is not used as a part
      of the i'th axis coordinate transformations.
    required: false
    valid_values: null
    alternate: null
  COORDINATE_SYSTEM:
    description: >
      All variables for which the values are dependent on the system of coordinates are
      strongly recommended to have this attribute. This includes both full vectors, tensors, etc.
      or individual values, e.g. of an angle with respect to some axis. The attribute is a text
      string which takes the form: "XXX[>optional long name]"
    required: false
    valid_values: null
    alternate: null
  CTYPEi:
    description: >
      This is a FITS WCS Keyword being repurposed for handling WCS transformations with
      high-dimensional or spectral CDF data variables. This metadata attribte should be
      used for the i'th dimension (1-based) and reapeated for all WCSAXES dimensions.
      The value field shall contain a character string, giving
      the name of the coordinate represented by axis i.
    required: false
    valid_values: null
    alternate: null
  CUNITi:
    description: >
      This is a FITS WCS Keyword being repurposed for handling WCS transformations with
      high-dimensional or spectral CDF data variables. This metadata attribte should be
      used for the i'th dimension (1-based) and reapeated for all WCSAXES dimensions.
      The value shall be the units along axis i, compatible with CTYPEi to be used for
      scaling and coordinate transformations along the i'th axis.
    required: false
    valid_values: null
    alternate: null
  CRPIXi:
    description: >
      This is a FITS WCS Keyword being repurposed for handling WCS transformations with
      high-dimensional or spectral CDF data variables. This metadata attribte should be
      used for the i'th dimension (1-based) and reapeated for all WCSAXES dimensions.
      The value field shall contain a floating point number,
      identifying the location of a reference point along axis i, in units of
      the axis index.  This value is based upon a counter that runs from 1 to
      NAXISn with an increment of 1 per pixel.  The reference point value
      need not be that for the center of a pixel nor lie within the actual
      data array.  Use comments to indicate the location of the index point
      relative to the pixel.
    required: false
    valid_values: null
    alternate: null
  CRVALi:
    description: >
      This is a FITS WCS Keyword being repurposed for handling WCS transformations with
      high-dimensional or spectral CDF data variables. This metadata attribte should be
      used for the i'th dimension (1-based) and reapeated for all WCSAXES dimensions.
      The value field shall contain a floating point number,
      giving the value of the coordinate specified by the CTYPEn keyword at
      the reference point CRPIXi.
    required: false
    valid_values: null
    alternate: null
  DELTA_PLUS_VAR:
    description: >
      included to point to a variable (or variables) which stores the uncertainty in (or range of) the original variable's value.
      The uncertainty (or range) is stored as a (+/-) on the value of the original variable.
      For many variables in ISTP, the original variable will be at the center of the interval so that only one value (or one set of values) of uncertainty (or range) will need to be defined.
      In this case, DELTA_PLUS_VAR, and DELTA_MINUS_VAR will point to the same variable.
      The value of the attribute must be a variable in the same CDF data set.
    required: false # Optional in ISTP Guide
    valid_values: null
    alternate: null
  DELTA_MINUS_VAR:
    description: >
      included to point to a variable (or variables) which stores the uncertainty in (or range of) the original variable's value.
      The uncertainty (or range) is stored as a (+/-) on the value of the original variable.
      For many variables in ISTP, the original variable will be at the center of the interval so that only one value (or one set of values) of uncertainty (or range) will need to be defined.
      In this case, DELTA_PLUS_VAR, and DELTA_MINUS_VAR will point to the same variable.
      The value of the attribute must be a variable in the same CDF data set.
    required: false # Optional in ISTP Guide
    valid_values: null
    alternate: null
  DEPEND_0:
    description: >
      Explicitly ties a data variable to the time variable on which it depends.
      All variables which change with time must have a DEPEND_0 attribute defined.
    required: true
    valid_values: null
    alternate: null
  DEPEND_i:         # For i'th dimensional data variables
    description: >
      Ties a dimensional data variable to a SUPPORT_DATA variable on which the i-th dimension of the data variable depends.
      The number of DEPEND attributes must match the dimensionality of the variable, i.e., a one-dimensional variable must have a DEPEND_1, a two-dimensional variable must have a DEPEND_1 and a DEPEND_2 attribute, etc.
      The value of the attribute must be a variable in the same CDF data set.
      It is strongly recommended that DEPEND_i variables hold values in physical units.
    required: false # required for 2+ dimensional variables
    valid_values: null
    alternate: null
  DERIVN:
    description: >
      A text string identifying the derivation of the variable, possibly including a function/algorithm name or journal reference.
      Most derived variables will not be unique, and this information is essential if the product is to be compared/validated elsewhere.
    required: false # Optional in ISTP Guide
    valid_values: null
    alternate: null
  DICT_KEY:
    description: >
      comes from a data dictionary keyword list and describes the variable to which it is attached.
      The ISTP standard dictionary keyword list is described in ISTP Dictionary Keywords.
    required: false # Optional in ISTP Guide
    valid_values: null
    alternate: null
  DISPLAY_TYPE:
    description: >
      This tells automated software, such as CDAWeb, how the data should be displayed.
    required: true
    valid_values:
      time_series
      time_series>noerrorbars
      spectrogram
      stack_plot
      image
      no_plot
    alternate: null
  FIELDNAM:
    description: >
      holds a character string (up to 30 characters) which describes the variable.
      It can be used to label a plot either above or below the axis, or can be used as a data listing heading.
      Therefore, consideration should be given to the use of upper and lower case letters where the appearance of the output plot or data listing heading will be affected.
    required: true
    valid_values: null
    alternate: null
  FILLVAL:
    description: >
      is the number inserted in the CDF in place of data values that are known to be bad or missing.
      Fill data are always non-valid data.
      Fill values are automatically supplied in the ISTP CDHF ICSS environment (ICSS_KP_FILL_VALUES.INC) for key parameters produced at the CDHF.
      The FILLVAL data type must match the data type of the variable.
    required: true
    valid_values: null
    alternate: null
  FORMAT:           # NOTE Only one of FORMAT or FORM_PTR should be present
    description: >
      This field allows software to properly format the associated data when displayed on a screen or output to a file.
      Format can be specified using either Fortran or C format codes.
      For instance, "F10.3" indicates that the data should be displayed across 10 characters where 3 of those characters are to the right of the decimal.
      For a description of FORTRAN formatting codes see the docs here:
      https://docs.oracle.com/cd/E19957-01/805-4939/z40007437a2e/index.html
    required: true # not required if using FORM_PTR
    valid_values: null
    alternate: FORM_PTR
  FORM_PTR:
    description: >
      The value of this field is a variable which stores the character string that represents the desired output format for the associated data.
    required: false # required if not using FORMAT
    valid_values: null
    alternate: FORMAT
  LABLAXIS:          # NOTE Only one of LABLAXIS or LABL_PTR_i should be present
    description: >
      should be a short character string (approximately 10 characters, but preferably 6 characters - more only if absolutely required for clarity) which can be used to label a y-axis for a plot or to provide a heading for a data listing.
      Only one of LABLAXIS or LABL_PTR_i should be present.
    required: true # not required if using LABL_PTR_i
    valid_values: null
    alternate: LABL_PTR_1
  LABL_PTR_i:
    description: >
      Used to label a dimensional variable when one value of LABLAXIS is not sufficient to describe the variable or to label all the axes.
      LABL_PTR_i is used instead of LABLAXIS, where i can take on any value from 1 to n where n is the total number of dimensions of the original variable.
      The value of LABL_PTR_1 is a variable which will contain the short character strings which describe the first dimension of the original variable.
      The value of the attribute must be a variable in the same CDF data set and is generally 6-10 characters.
      Only one of LABLAXIS or LABL_PTR_i should be present.
    required: false # required if not using LABLAXIS or data is multi-dimensional
    valid_values: null
    alternate: LABLAXIS
  LIMITS_WARN_MIN:
    description: >
      Values which define the limits where damage is likely to occur for values outside these values (often referred to as red limits).
      Visualization software can use these attributes for indicating limits on plots or other warnings.
      The values data type must match the data type of the variable.
    required: false # Optional in ISTP Guide
    valid_values: null
    alternate: null
  LIMITS_WARN_MAX:
    description: >
      Values which define the limits where damage is likely to occur for values outside these values (often referred to as red limits).
      Visualization software can use these attributes for indicating limits on plots or other warnings.
      The values data type must match the data type of the variable.
    required: false # Optional in ISTP Guide
    valid_values: null
    alternate: null
  LIMITS_NOMINAL_MIN:
    description: >
      Values which define the range of nominal operations and where values outside the range of these values should be flagged as warnings (often referred to as yellow limits).
      Visualization software can use these attributes for indicating limits on plots or other warnings.
      The range of LIMITS_NOMINAL_MIN and LIMITS_NOMINAL_MAX fall within the range of LIMITS_WARN_MIN and LIMITS_WARN_MAX.
      Yellow limits are often set a certain percentage away from the red limits to give the operator a chance to respond before the red limits are reached. The values data type must match the data type of the variable.
    required: false # Optional in ISTP Guide
    valid_values: null
    alternate: null
  LIMITS_NOMINAL_MAX:
    description: >
      Values which define the range of nominal operations and where values outside the range of these values should be flagged as warnings (often referred to as yellow limits).
      Visualization software can use these attributes for indicating limits on plots or other warnings.
      The range of LIMITS_NOMINAL_MIN and LIMITS_NOMINAL_MAX fall within the range of LIMITS_WARN_MIN and LIMITS_WARN_MAX.
      Yellow limits are often set a certain percentage away from the red limits to give the operator a chance to respond before the red limits are reached.
      The values data type must match the data type of the variable.
    required: false # Optional in ISTP Guide
    valid_values: null
    alternate: null
  MJDREF:
    description: >
      This is a FITS WCS Keyword being repurposed for handling WCS transformations with
      high-dimensional or spectral CDF data variables. The value shall contain a floating
      point number representing the reference time position of the time stamps along the
      0'th axis of the measurement.
    required: false
    valid_values: null
    alternate: null
  MONOTON:
    description: >
      Indicates whether the variable is monotonically increasing or monotonically decreasing.
      Use of MONOTON is strongly recommended for the Epoch time variable, and can significantly increase the performance speed on retrieval of data.
      Valid values: INCREASE, DECREASE.
    required: false # Optional in ISTP Guide
    valid_values:
      INCREASE
      DECREASE
    alternate: null
  OPERATOR_TYPE:
    description: >
      This has been introduced to describe HERMES quaternions (see Section 5.2 below). It
      has allowed values "UNIT_QUATERNION" or "ROTATION_MATRIX" although other
      values could be added. Unit quaternions correspond to pure spatial rotations.
    required: false
    valid_values: null
    alternate: null
  REPRESENTATION_i:
    description: >
      This strongly recommended attribute holds the way vector or tensor variables are held,
      e.g., as Cartesian or polar forms, and their sequence order in the dimension i in which
      they are held. Cartesians are indicated by x,y,z; polar coordinates by r (magnitude), t
      (theta - from z-axis), p (phi - longitude or azimuth around z-axis from x axis), l (lambda
      = latitude). Examples follow.
    required: false
    valid_values: null
    alternate: null
  SCALEMIN:
    description: >
      are values which can be based on the actual values of data found in the CDF data set or on the probable uses of the data, {\em e.g.}, plotting multiple files at the same scale.
      Visualization software can use these attributes as defaults for plotting.
      The values must match the data type of the variable.
    required: false # Optional in ISTP Guide
    valid_values: null
    alternate: null
  SCALEMAX:
    description: >
      are values which can be based on the actual values of data found in the CDF data set or on the probable uses of the data, {\em e.g.}, plotting multiple files at the same scale.
      Visualization software can use these attributes as defaults for plotting.
      The values must match the data type of the variable.
    required: false # Optional in ISTP Guide
    valid_values: null
    alternate: null
  SCALETYP:
    description: >
      is a text string which describes the type of scaling that should be used for the variable.
      The value of this attribute can be used with application software.
      Examples are listed below:
      - linear
      - log
    required: false # Optional in ISTP Guide
    valid_values: null
    alternate: null
  SCAL_PTR:
    description: >
      The value of this field is a variable which stores the character string that represents the desired scaling type for the associated data.
      The allowed values are linear and log.
      The value of the attribute must be a variable in the same CDF data set.
    required: false # Optional in ISTP Guide
    valid_values: null
    alternate: null
  sig_digits:
    description: >
      This attribute provides the number of significant digits or other measure of data accuracy in a TBD manner.
      It is to allow compression software to optimise the number of digits to retain, and users to assess the accuracy of products.
      This operation is subject to the deliberations of the 'network traffic report' Task Group, DS-CFC-TN-0001, on compression algorithms and implementation.
      Restrictions on data compression may also influence the format and choice of data type used by the CDF generation software.
    required: false # Recommended in ISTP Guide
    valid_values: null
    alternate: null
  SI_CONVERSION:
    description: >
      The conversion factor to SI units.
      This is the factor that the variable must be multiplied by in order to convert it to generic SI units.
      This parameter contains two text fields separated by the ">" delimiter.
      The first component is the conversion factor and the second is the standard SI unit.
      Units are defined according to their standard SI symbols (ie. Tesla = T, Newtons = N, Meters = m, etc.)
      For data variables that are inherently unitless, and thus lack a conversion factor, this data attribute will be " > " where ' ' is a blank space and the quotation marks are not included.
      Units which are not conveniently transformed into SI should follow the blank syntax " > " described above.
    required: false
    valid_values: null
    alternate: null
  TENSOR_ORDER:
    description: >
      All variables which hold physical vectors, tensors, etc., or sub-parts thereof, are strongly
      recommended to have their tensorial properties held by this numerical value. Vectors
      have TENSOR_ORDER=1, pressure tensors have TENSOR_ORDER=2, etc. Variables
      which hold single components or sub-parts of a vector or tensor, e.g., the x-component of
      velocity or the three diagonal elements of a tensor, use this attribute to establish the
      underlying object from which they are extracted. TENSOR_ORDER is a number, usually
      held as a CDF_INT4, rather than a character string.
    required: false
    valid_values: null
    alternate: null
  TIMEDEL:
    description: >
      This is a FITS WCS Keyword being repurposed for handling WCS transformations with
      high-dimensional or spectral CDF data variables. The value shall contain a floating
      point number representing the resolution of the time stamps along the 0'th axis of
      the measurement. The TIMEDEL should match the CRDELi along the time axis of the
      measurement.
    required: false
    valid_values: null
    alternate: null
  TIMEUNIT:
    description: >
      This is a FITS WCS Keyword being repurposed for handling WCS transformations with
      high-dimensional or spectral CDF data variables. The value shall contain a character
      string giving the units of the time stamps along the 0'th axis of the measurement.
      The TIMEUNIT should match the CUNITi along the time axis of the measurement
    required: false
    valid_values: null
    alternate: null
  UNITS:            # NOTE Only one of UNITS or UNIT_PTR should be present
    description: >
      A 6-20 character string that identifies the units of the variable (e.g. nT for magnetic field).
      Use a blank character, rather than "None" or "unitless", for variables that have no units (e.g., a ratio or a direction cosine).
    required: true # not required if using UNIT_PTR
    valid_values: null
    alternate: UNIT_PTR
  UNIT_PTR:
    description: >
      The value of this field is a variable which stores short character strings which identify the units of the variable.
      Use a blank character, rather than "None" or "unitless", for variables that have no units (e.g., a ratio or a direction cosine).
      The value of this attribute must be a variable in the same CDF data set.
    required: false # required if not using UNITS
    valid_values: null
    alternate: UNITS
  VALIDMIN:
    description: >
      The minimum value for a particular variable that is expected over the lifetime of the mission.
      Used by application software to filter out values that are out of range.
      The value must match the data type of the variable.
    required: true
    valid_values: null
    alternate: null
  VALIDMAX:
    description: >
      The maximum value for a particular variable that is expected over the lifetime of the mission.
      Used by application software to filter out values that are out of range.
      The value must match the data type of the variable.
    required: true
    valid_values: null
    alternate: null
  VAR_NOTES:
    description: >
      A text string that provides additional information about the variable.
      This information can include the source of the data, the method of calculation, or any other information that is relevant to the variable.
    required: false # Optional in ISTP Guide
    valid_values: null
    alternate: null
  VAR_TYPE:
    description: >
      Used in CDAWeb to indicate if the data should be used directly by users.
    required: true
    valid_values:
        data
        support_data
        metadata
        ignore_data
    alternate: null
  VARIABLE_PURPOSE:
    description: >
      are a list of tags/keywords separated by commas that indicate probable uses of the variable and its function.
      Software can use these attributes to find the primary variables in the dataset, find variables with a common function, indicate variables suitable for specific purposes such as summary plots or educational displays, etc.
      Tags could indicate a common geophysical quantity to enable matching several variables of the same kind.
      For instance, all magnetic field variables could be tagged with VARIABLE_PURPOSE="Magnetic_Field" even though they have different coordinate systems or cadences.
      Software could use this tag to identify variables with a common theme for easier distinguishing between groups of variables and selecting between them.
      The values are always in a character string.
      Suggested tags/keywords include:
      - "PRIMARY_VAR": one of the primary variables in the dataset
      - "EDUCATION": one of the variables suitable for displaying in an educational context
      - "SUMMARY": one the variables to display on automatic summary plots
      - "CARTESIAN", "ANGULAR": distinguish variables by coordinate system
      - "Magnetic_Field", "Electric_Field", etc.: common instrument tag to relate similar variables
    required: false # Optional in ISTP Guide
    valid_values: null
    alternate: null
  V_PARENT:
    description: >
      identifies the "attached" variable which stores the parent variable(s) of a derived variable.
      The "attached" variable can be dimensional and sized to hold as many parents as necessary.
      The syntax of each entry would be: logical_file_id>variable_name.
    required: false # Optional in ISTP Guide
    valid_values: null
    alternate: null
  WCSAXES:
    description: >
      This is a FITS WCS Keyword being repurposed for handling WCS transformations with
      high-dimensional or spectral CDF data variables.
      The value field shall contain a non-negative integer no
      greater than 999, representing the number of axes in the associated
      data array.
    required: false
    valid_values: null
    alternate: null
data:
  - CATDESC
  - DEPEND_0
  - DISPLAY_TYPE
  - FIELDNAM
  - FILLVAL
  - FORMAT
  - LABLAXIS
  - SI_CONVERSION
  - UNITS
  - VALIDMIN
  - VALIDMAX
  - VAR_TYPE
support_data:
  - CATDESC
  - FIELDNAM
  - FILLVAL
  - FORMAT
  - LABLAXIS
  - SI_CONVERSION
  - UNITS
  - VALIDMIN
  - VALIDMAX
  - VAR_TYPE
metadata:
  - CATDESC
  - FIELDNAM
  - FILLVAL
  - FORMAT
  - VAR_TYPE
